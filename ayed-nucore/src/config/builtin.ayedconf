# Features I think could be useful/necessary:
# - "Scripts" as sequence of commands.
#       Usable in place of commands in keybinds, hooks, etc.
#       Async "scripts"?
# - ...?

mixin basic-movement {
    keybinds {
        <up> move u
        <down> move d
        <left> move l
        <right> move r
        <s-up> move u anchored
        <s-down> move d anchored
        <s-left> move l anchored
        <s-right> move r anchored
        <c-right> move-regex \w+|[^\s\w]+
    }
}

mixin basic-deletion {
    keybinds {
        <del> delete
        <backspace> delete-around -p
        <a-backspace> delete-around
    }
}

mode command {
    use basic-movement
    use basic-deletion

    keybinds {
        C dupe d
        <a-C> dupe u
        d delete
        : focus-panel modeline
        i mode-set insert
    }
}

mode insert {
    use basic-movement
    use basic-deletion

    keybinds {
        <esc> mode-set command
        else insert-char
    }
}

@override
panel modeline {
    use basic-movement
    use basic-deletion

    keybinds {
        <esc> focus-panel editor
        <ret> modeline-exec
        else insert-char
    }
}

syntax-style {
    keyword             #4488cf
    keyword-statement   #aa77cc
    builtin             #62b0fb priority:11
    operator            #ddccdd
    delimiter           #ccaa11 priority:11
    macro               #3377cc priority:11
    type                #55b89b priority:12
    literal             #aaddcc priority:11
    string              #bb8866 priority:14
    function            #b8a4fc priority:13
    namespace           #55b89b
    comment             #55887a priority:15
}

file .*\.rs {
    syntax {
        keyword \b(let|impl|pub|fn|mod|use|as|self|Self|mut|unsafe|move|struct|enum|type)\b
        keyword-statement \b(if|else|while|for|in|loop|continue|break|match)\b
        builtin \b(Some|None|Ok|Err)\b
        operator (==|=|!=|\+|\+=|\-|\-=|\*|\*=|/|/=|!|\|\||&&|\||&|::|:|;|,|\.\.|\.|\?)
        delimiter (->|=>|\{|\}|\[|\]|\(|\)|<|>)
        macro \b([a-zA-Z0-9_]+\!)
        type \b([A-Z][a-zA-Z0-9_]*)\b \b((u|i)(8|16|32|64|128)|f32|f64)\b \b(char)\b
        literal (([0-9]*\.[0-9]+|[0-9]+\.|[0-9]+)((u|i)(8|16|32|64|128)|f32|f64)?) \b(true|false)\b
        string (r?\"[^\"]*\") (r?'[^']*')
        function \b([a-z0-9_][a-zA-Z0-9_]*)\(
        namespace \b([a-zA-Z0-9_]+)::
        comment (//.*)$
    }
}

hooks {
    modify-buffer builtin-syntax-highlight
    after-insert builtin-auto-indent
}
